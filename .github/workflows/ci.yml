name: CI

on:
  pull_request:
    types: [opened, synchronize, reopened]
  merge_group:
    types: [checks_requested]
  push:
    branches: [main]

permissions:
  contents: read

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  read_msrv:
    name: Read MSRV
    uses: actions-rust-lang/msrv/.github/workflows/msrv.yml@v0.1.0

  build_and_test:
    needs: read_msrv

    strategy:
      fail-fast: false
      matrix:
        version:
          - { name: msrv, version: "${{ needs.read_msrv.outputs.msrv }}" }
          - { name: stable, version: stable }

    name: Test / ${{ matrix.version.name }}
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - name: Setup mold linker
        uses: rui314/setup-mold@v1

      - name: Install Rust (${{ matrix.version.name }})
        uses: actions-rust-lang/setup-rust-toolchain@v1.12.0
        with:
          toolchain: ${{ matrix.version.version }}

      - name: Install just,cargo-hack,cargo-nextest,cargo-ci-cache-clean
        uses: taiki-e/install-action@v2.49.47
        with:
          tool: just,cargo-hack,cargo-nextest,cargo-ci-cache-clean

      - name: workaround MSRV issues
        if: matrix.version.name == 'msrv'
        run: just downgrade-for-msrv

      - name: tests
        timeout-minutes: 60
        run: just test

      - name: CI cache clean
        run: cargo-ci-cache-clean

  rustdoc:
    name: Documentation Tests
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Install Rust (nightly)
        uses: actions-rust-lang/setup-rust-toolchain@v1.12.0
        with:
          toolchain: nightly

      - name: Install just
        uses: taiki-e/install-action@v2.49.47
        with:
          tool: just

      - name: doc tests
        run: just test-docs

  features:
    name: Feature Combinations
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Install Rust (stable)
        uses: actions-rust-lang/setup-rust-toolchain@v1.12.0

      - name: Install cargo-hack
        uses: taiki-e/install-action@v2.49.47
        with:
          tool: cargo-hack

      - name: doc tests
        run: |
          cargo hack --each-feature check
          cargo hack --each-feature check --all-targets
